name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  BUN_VERSION: 1.0.0
  NODE_VERSION: 20
  PYTHON_VERSION: 3.9
  POETRY_VERSION: 1.5.0

jobs:
  lint-typescript:
    name: Lint TypeScript
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Run TypeScript linter
        run: bun run lint:ts
      
      - name: Check TypeScript types
        run: bun run typecheck

  lint-python:
    name: Lint Python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: dgm/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        working-directory: ./dgm
        run: poetry install --no-interaction --no-root
      
      - name: Run Python linter
        working-directory: ./dgm
        run: |
          poetry run ruff check .
          poetry run mypy .

  test-typescript:
    name: Test TypeScript
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2]
    steps:
      - uses: actions/checkout@v4
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Run TypeScript tests
        run: bun run test:ts --shard=${{ matrix.shard }}/2
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          flags: typescript
          directory: ./coverage

  test-python:
    name: Test Python
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: dgm/.venv
          key: venv-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        working-directory: ./dgm
        run: poetry install --no-interaction --no-root
      
      - name: Run Python tests
        working-directory: ./dgm
        run: poetry run pytest --cov
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          flags: python
          directory: ./dgm

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint-typescript, lint-python, test-typescript, test-python]
    steps:
      - uses: actions/checkout@v4
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
      
      - name: Install all dependencies
        run: |
          bun install --frozen-lockfile
          cd dgm && poetry install --no-interaction
      
      - name: Build TypeScript
        run: bun run build:ts
      
      - name: Build Python
        working-directory: ./dgm
        run: poetry build
      
      - name: Upload TypeScript artifacts
        uses: actions/upload-artifact@v3
        with:
          name: typescript-dist
          path: |
            opencode/dist
            packages/*/dist
      
      - name: Upload Python artifacts
        uses: actions/upload-artifact@v3
        with:
          name: python-dist
          path: dgm/dist/

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
      
      - name: Install dependencies
        run: |
          bun install --frozen-lockfile
          cd dgm && poetry install --no-interaction
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
      
      - name: Run integration tests
        run: |
          # Add integration test commands here
          echo "Integration tests would run here"